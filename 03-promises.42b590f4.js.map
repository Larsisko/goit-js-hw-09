{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SA0BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApCPL,EAAKa,iBAAiB,UAAU,SAAUC,GACxCA,EAAEC,iBAMF,IALA,IAAMC,EAAW,IAAIC,SAASjB,GACxBkB,EAAQC,SAASH,EAASI,IAAI,UAC9BC,EAAOF,SAASH,EAASI,IAAI,SAC7BE,EAASH,SAASH,EAASI,IAAI,WAE5BG,EAAW,EAAGA,GAAYD,EAAQC,IAAY,CAErDpB,EAAcoB,EADOL,GAASK,EAAW,GAAKF,GAE3CG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,OAC1DwB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCH,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjD2B,OAAM,SAAAP,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,QAAQC,IAAI,sBAAuCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,OACzDwB,EAAA/B,GAASgC,OAAOG,QACd,sBAAqCL,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n  const formData = new FormData(form);\n  const delay = parseInt(formData.get('delay'));\n  const step = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  for (let position = 1; position <= amount; position++) {\n    const currentDelay = delay + (position - 1) * step;\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // F\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","formData","FormData","delay1","parseInt","get","step","amount","position1","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.42b590f4.js.map"}